# web定义
server:
  # 设置 Spring Boot 应用程序的端口号，默认为 8080，这里修改为 8091
  port: 8091

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.http.converter: DEBUG

spring:
  rabbitmq:
    host: 192.168.22.132 # rabbitMQ的ip地址
    port: 5672 # 端口
    username: async
    password: root
    virtual-host: /
  # 配置mysql数据源，使用Druid数据库连接池
  datasource:
    druid:
      # 数据库用户名
      username: root
      # 数据库密码
      password: root
      # MySQL 数据库连接URL，包含数据库地址、端口、数据库名称及其他连接参数
      url: jdbc:mysql://192.168.22.132:3306/stock_db?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
      # 数据库驱动类，MySQL 的 JDBC 驱动
      driver-class-name: com.mysql.jdbc.Driver
      # 初始化时建立物理连接的个数。初始化发生在显示调用 init 方法，或者第一次 getConnection 时
      initialSize: 6
      # 最小连接池数量
      minIdle: 2
      # 最大连接池数量，表示同时最大连接数
      maxActive: 20
      # 获取连接时最大等待时间，单位毫秒。配置了 maxWait 之后，缺省启用公平锁，
      # 并发效率会有所下降，如果需要可以通过配置 useUnfairLock 属性为 true 使用非公平锁
      maxWait: 60000
  # spring中激活其它配置类
  profiles:
    active: cache,stock # 激活|加载其它配置资源
# 配置mybatis
mybatis:
  # 扫描并注册指定包下的所有别名，简化在 XML 映射文件中引用类的方式
  type-aliases-package: com.async.stock.pojo
  # 定义 MyBatis 映射文件的位置
  mapper-locations: classpath:mapper/*.xml
  configuration:
    # 开启驼峰命名规则映射，将数据库字段如 user_id 映射为 userId 属性
    map-underscore-to-camel-case: true

# PageHelper分页插件的配置
pagehelper:
  # 指定分页数据库的类型（方言），这里是 MySQL
  helper-dialect: mysql
  # 开启合理化查询，查询页码超过最大页则返回最后一页，页码为 0 或负数则返回第一页
  reasonable: true
